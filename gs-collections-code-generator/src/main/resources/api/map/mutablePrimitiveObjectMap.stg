import "copyright.stg"

targetPath() ::= "com/gs/collections/api/map/primitive"

fileName(primitive) ::= "Mutable<primitive.name>ObjectMap"

class(primitive) ::= <<
<body(primitive.type, primitive.name)>
>>

body(type, name) ::= <<
<copyright()>

package com.gs.collections.api.map.primitive;

import com.gs.collections.api.<name>Iterable;
import com.gs.collections.api.block.function.Function;
import com.gs.collections.api.block.function.Function0;
import com.gs.collections.api.block.function.primitive.<name>ToObjectFunction;
import com.gs.collections.api.block.predicate.primitive.<name>ObjectPredicate;

/**
 * This file was automatically generated from template file mutablePrimitiveObjectMap.stg.
 */
public interface Mutable<name>ObjectMap\<V\> extends <name>ObjectMap\<V\>
{
    V removeKey(<type> key);

    V getIfAbsentPut(<type> key, Function0\<? extends V\> function);

    V getIfAbsentPutWithKey(<type> key, <name>ToObjectFunction\<? extends V\> function);

    \<P\> V getIfAbsentPutWith(<type> key, Function\<? super P, ? extends V\> function, P parameter);

    Mutable<name>ObjectMap\<V\> select(<name>ObjectPredicate\<? super V\> predicate);

    Mutable<name>ObjectMap\<V\> reject(<name>ObjectPredicate\<? super V\> predicate);

    Mutable<name>ObjectMap\<V\> withKeyValue(<type> key, V value);

    Mutable<name>ObjectMap\<V\> withoutKey(<type> key);

    Mutable<name>ObjectMap\<V\> withoutAllKeys(<name>Iterable keys);
}

>>
