import "copyright.stg"
import "primitiveAPI.stg"

targetPath() ::= "com/gs/collections/api/list/primitive"

fileName(primitive) ::= "Mutable<primitive.name>List"

class(primitive) ::= <<
<body(primitive.type, primitive.name)>
>>

body(type, name) ::= <<
<copyright()>

package com.gs.collections.api.list.primitive;

import com.gs.collections.api.<name>Iterable;
import com.gs.collections.api.collection.primitive.Mutable<name>Collection;
import com.gs.collections.api.block.predicate.primitive.<name>Predicate;

/**
 * This file was automatically generated from template file mutablePrimitiveList.stg.
 *
 * @since 3.0.
 */
public interface Mutable<name>List extends Mutable<name>Collection, <name>List
{
    void addAtIndex(int index, <type> element);

    boolean addAllAtIndex(int index, <type>... source);

    boolean addAllAtIndex(int index, <name>Iterable source);

    <type> removeAtIndex(int index);

    <type> set(int index, <type> element);

    <sharedAPI(fileName(primitive), name)>

    <mutableAPI(fileName(primitive), type, name)>

    Mutable<name>List reverseThis();

    Mutable<name>List toReversed();

}

>>
