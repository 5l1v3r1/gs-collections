literal ::= [
    "byte": "byteLiteral",
    "short": "shortLiteral",
    "char": "charLiteral",
    "int": "intLiteral",
    "long": "longLiteral",
    "float": "floatLiteral",
    "double": "doubleLiteral"
]

intLiteral(item) ::= <<
<item>
>>

shortLiteral(item) ::= <<
(short) <item>
>>

byteLiteral(item) ::= <<
(byte) <item>
>>

charLiteral(item) ::= <<
(char) <item>
>>

longLiteral(item) ::= <<
<item>L
>>

floatLiteral(item) ::= <<
<item>.0f
>>

doubleLiteral(item) ::= <<
<item>.0
>>

wideLiteral ::= [
    "byte": "longLiteral",
    "short": "longLiteral",
    "char": "longLiteral",
    "int": "longLiteral",
    "long": "longLiteral",
    "float": "doubleLiteral",
    "double": "doubleLiteral"
]

toStringLiteral ::= [
    "byte": "intLiteral",
    "short": "intLiteral",
    "char": "charStringLiteral",
    "int": "intLiteral",
    "long": "intLiteral",
    "float": "doubleLiteral",
    "double": "doubleLiteral"
]

charStringLiteral(item) ::= <<
\u000<item>
>>

zero ::= [
    "byte": "(byte) 0",
    "short": "(short) 0",
    "char": "'\0'",
    "int": "0",
    "long": "0L",
    "float": "0.0f",
    "double": "0.0"
]

wideZero ::= [
    "byte": "0L",
    "short": "0L",
    "char": "0L",
    "int": "0L",
    "long": "0L",
    "float": "0.0",
    "double": "0.0"
]

delta ::= [
    "byte": "",
    "short": "",
    "char": "",
    "int": "",
    "long": "",
    "float": ", 0.0f",
    "double": ", 0.0"
]

wideDelta ::= [
    "byte": "",
    "short": "",
    "char": "",
    "int": "",
    "long": "",
    "float": ", 0.0",
    "double": ", 0.0"
]

wideType ::= [
    "byte": "long",
    "short": "long",
    "char": "long",
    "int": "long",
    "long": "long",
    "float": "double",
    "double": "double"
]

castType ::= [
    "byte": "(double) ",
    "short": "(double) ",
    "char": "(double) ",
    "int": "(double) ",
    "long": "(double) ",
    "float": "(double) ",
    "double": ""
]

castSum ::= [
    "byte": "(double) ",
    "short": "(double) ",
    "char": "(double)",
    "int": "(double) ",
    "long": "(double) ",
    "float": "",
    "double": ""
]

castExpression ::= [
    "byte": "byteCast",
    "short": "shortCast",
    "char": "charCast",
    "int": "noCast",
    "long": "noCast",
    "float": "noCast",
    "double": "noCast"
]

noCast(item) ::= <<
<item>
>>

shortCast(item) ::= <<
(short) (<item>)
>>

byteCast(item) ::= <<
(byte) (<item>)
>>

charCast(item) ::= <<
(char) (<item>)
>>
